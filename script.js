
// === –ù–ê–°–¢–†–û–ô–ö–ò –î–õ–Ø TELEGRAM ===
const BOT_TOKEN = "8293941414:AAEpQC0zYCoAZzjpD9q_WdDBO20-HHwGs24"
const CHAT_ID = "1066340802"

// === –ú–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é ===
document.getElementById('mobile-menu-button').addEventListener('click', function() {
    const menu = document.getElementById('mobile-menu');
    menu.classList.toggle('hidden');
});

// === Lightbox ===
function openLightbox(src) {
    const lightbox = document.getElementById('lightbox');
    const lightboxImg = document.getElementById('lightbox-img');
    lightboxImg.src = src;
    lightbox.style.display = 'block';
    document.body.style.overflow = 'hidden';
}

function closeLightbox() {
    const lightbox = document.getElementById('lightbox');
    lightbox.style.display = 'none';
    document.body.style.overflow = 'auto';
}

window.onclick = function(event) {
    const lightbox = document.getElementById('lightbox');
    if (event.target == lightbox) {
        closeLightbox();
    }
}

// === –°–ª–∞–π–¥–µ—Ä –æ—Ç–∑—ã–≤–æ–≤ ===
let slideIndex = 1;
showSlides(slideIndex);

function plusSlides(n) {
    showSlides(slideIndex += n);
}

function currentSlide(n) {
    showSlides(slideIndex = n);
}

function showSlides(n) {
    let i;
    let slides = document.getElementsByClassName("testimonial-slide");
    let dots = document.getElementsByClassName("dot");
    
    if (n > slides.length) {slideIndex = 1}
    if (n < 1) {slideIndex = slides.length}
    
    for (i = 0; i < slides.length; i++) {
        slides[i].classList.remove("active");
    }
    
    for (i = 0; i < dots.length; i++) {
        dots[i].className = dots[i].className.replace(" bg-gray-400", " bg-gray-300");
    }
    
    slides[slideIndex-1].classList.add("active");
    dots[slideIndex-1].className += " bg-gray-400";
}

// === –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã signup-form (–ª–æ–∫–∞–ª—å–Ω–∞—è) ===
const signupForm = document.getElementById('signup-form');
if (signupForm) {
    signupForm.addEventListener('submit', function(e) {
        e.preventDefault();
        this.reset();
        document.getElementById('success-modal').classList.remove('hidden');
        document.body.style.overflow = 'hidden';
    });
}

function closeSuccessModal() {
    document.getElementById('success-modal').classList.add('hidden');
    document.body.style.overflow = 'auto';
}

// === –ü–ª–∞–≤–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ ===
document.querySelectorAll('a[href^="#"]').forEach(anchor => {
    anchor.addEventListener('click', function (e) {
        e.preventDefault();
        const targetId = this.getAttribute('href');
        if (targetId === '#') return;
        const targetElement = document.querySelector(targetId);
        if (targetElement) {
            targetElement.scrollIntoView({ behavior: 'smooth' });
        }
    });
});

// === –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã contactForm –≤ Telegram ===
const contactForm = document.getElementById("contactForm");
if (contactForm) {
    contactForm.addEventListener("submit", function(e) {
        e.preventDefault();

        const name = document.getElementById("name").value.trim();
        const phone = document.getElementById("phone").value.trim();
        const email = document.getElementById("email").value.trim();
        const program = document.getElementById("program").value;
        const messageText = document.getElementById("message").value.trim();

        if (!name || !phone || !program) {
            alert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è");
            return;
        }

        const message = `üìå –ó–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞\nüë§ –ò–º—è: ${name}\nüìû –¢–µ–ª–µ—Ñ–æ–Ω: ${phone}\nüìß Email: ${email || "‚Äî"}\nüìö –ü—Ä–æ–≥—Ä–∞–º–º–∞: ${program}\nüí¨ –í–æ–ø—Ä–æ—Å: ${messageText || "‚Äî"}`;

        fetch(`https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                chat_id: CHAT_ID,
                text: message,
                parse_mode: "HTML"
            })
        })
        .then(response => response.json())
        .then(data => {
            if (data.ok) {
                alert("–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏.");
                contactForm.reset();
            } else {
                alert("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.");
                console.error(data);
            }
        })
        .catch(error => {
            alert("–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è.");
            console.error(error);
        });
    });
}
